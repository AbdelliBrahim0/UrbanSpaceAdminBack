security:
    password_hashers:
        App\Entity\user\User: 'auto'
        App\Entity\Admin\User: 'auto'

    providers:
        user_provider:
            entity:
                class: App\Entity\user\User
                property: email
        admin_provider:
            entity:
                class: App\Entity\Admin\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern: ^/api/admin
            provider: admin_provider
            stateless: true
            json_login:
                check_path: /api/admin/login
                username_path: email
                password_path: password
            logout:
                path: /api/admin/logout
        main:
            pattern: ^/api
            provider: user_provider
            stateless: true
            json_login:
                check_path: /api/login
                username_path: email
                password_path: password
            logout:
                path: /api/logout
            jwt: ~

    access_control:
        - { path: ^/api/signup, roles: PUBLIC_ACCESS }
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/oauth, roles: PUBLIC_ACCESS }
        - { path: ^/api/logout, roles: PUBLIC_ACCESS }
        - { path: ^/api/admin, roles: PUBLIC_ACCESS }
        - { path: ^/api/users, roles: PUBLIC_ACCESS }
        - { path: ^/api/products, roles: PUBLIC_ACCESS }
        - { path: ^/api/categories, roles: PUBLIC_ACCESS }
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
